function [deviation,ddm] = interfaceDDM(h90, h150)
%% interfaceDDM.m
% Calcul la différence de profondeur de modulation (ddm) de deux signals
% modulés de 90Hz et 150Hz localisées sur la ligne médiane d'une piste
% d'atterissage ainsi que la deviation de l'avion

% Entrés:
%   h90: indice de modulation du signal filtre 90 Hz [double]
%   h150: indice de modulation du signal filtre 90 Hz [double]
%
% Sortie:
%   ddm: signal d'écart entre les deux ondes porteuses [double]
%   deviation: deviation de l'avion [string]
    
    ddm = h90Hz - h150Hz;
    ddm = round(ddm,3,'significant'); % 3 chiffres significatifs
    ddm = single(ddm); % format single 32 bit;
    
    deviation = calculateDeviation(ddm);
    
    %sauvegarde ddm dans le fichier ascii 'ddm.txt'
    ddmAscii = num2str(ddm);
    fid = fopen('ddm.txt','wt');
    fprintf(fid, ddmAscii);
    fclose(fid);
    
    %sauvegarde deviation dans le fichier 'deviation.txt';
    fid = fopen('deviation.txt','wt');
    fprintf(fid, deviation);
    fclose(fid);
end

function deviation = calculateDeviation(ddm)
        %% calculateDeviationAvion
        % Calcul la deviation possible de l'avion dependamment de la valeur
        % DDM
        % Entrés:
        %   ddm: difference de profondeur de modulation [double]
        %
        % Sortie:
        %   deviation: deviation de l'avion [string]
        if (ddm == 0)
            deviation = "nul";
        elseif (ddm < 0)
            deviation = "negative";
        else
            deviation = "positive";
        end
end


